#!/bin/bash
# Include any branches for which you wish to disable this script
if [ -z "$BRANCHES_TO_SKIP" ]; then
  BRANCHES_TO_SKIP=(master)
fi

# Get the current branch name and check if it is excluded
BRANCH_NAME=$(git symbolic-ref --short HEAD)
# branch name example: #3r11kxe_UCD-0016
TASK_ID=$(echo $BRANCH_NAME | cut -d "_" -f 1)
TICKET_ID=$(echo $BRANCH_NAME | cut -d "_" -f 2)

BRANCH_EXCLUDED=$(printf "%s\n" "${BRANCHES_TO_SKIP[@]}" | grep -c "^$BRANCH_NAME$")

# Trim it down to get the parts we're interested in
#TASK_ID_TRIMMED=$(echo $TASK_ID | grep -Eom1 "[a-z0-9A-Z]{4,}" )
#TICKET_ID_TRIMMED=$(echo $TICKET_ID | grep -Eom1 "[a-z0-9A-Z]{4,}" )

# If it isn't excluded, preprend the trimmed branch identifier to the given message
if [ -n "$BRANCH_NAME" ] &&  ! [[ $BRANCH_EXCLUDED -eq 1 ]] && [ $TICKET_ID != $TASK_ID ]; then
  sed -i.bak -e "1s/^/$TASK_ID $TICKET_ID /" $1
fi

if [ -n "$BRANCH_NAME" ] &&  ! [[ $BRANCH_EXCLUDED -eq 1 ]] && [ $TICKET_ID == $TASK_ID ]; then
  sed -i.bak -e "1s/^/$TASK_ID /" $1
fi
